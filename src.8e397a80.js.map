{"version":3,"sources":["src/kanbanApi.js","src/view/DropZone.js","src/view/item.js","src/view/Column.js","src/view/kanban.js","src/index.js"],"names":["KanbanAPI","columnId","column","read","find","id","items","content","data","item","Math","floor","random","Error","push","save","itemId","newProps","currentColumn","undefined","position","targetColumn","splice","indexOf","json","localStorage","getItem","JSON","parse","setItem","stringify","DropZone","range","document","createRange","selectNode","body","dropZone","createContextualFragment","children","addEventListener","e","preventDefault","classList","add","remove","columnElement","closest","Number","dataset","droppedIndex","Array","from","querySelectorAll","dataTransfer","getData","droppedItemElement","querySelector","insertAfter","parentElement","contains","after","updateItem","Item","bottomDropZone","createDropZone","elements","root","createRoot","input","textContent","appendChild","onBlur","newContent","trim","window","confirm","deleteItem","removeEventListener","removeChild","setData","Column","title","topDropZone","addItem","newItem","insertItem","renderItem","getItems","forEach","Kanban","columns","columnView"],"mappings":"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","file":"src.8e397a80.js","sourceRoot":"..","sourcesContent":["export default class KanbanAPI {\n  static getItems(columnId) {\n    const column = read().find((column) => column.id === columnId);\n\n    if (!column) {\n      return [];\n    }\n\n    return column.items;\n  }\n\n  static insertItem(columnId, content) {\n    const data = read();\n    const column = data.find((column) => column.id === columnId);\n    const item = {\n      id: Math.floor(Math.random() * 100000),\n      content\n    };\n\n    if (!column) {\n      throw new Error(\"Column does not exist.\");\n    }\n\n    column.items.push(item);\n    save(data);\n\n    return item;\n  }\n\n  static updateItem(itemId, newProps) {\n    const data = read();\n    const [item, currentColumn] = (() => {\n      for (const column of data) {\n        const item = column.items.find((item) => item.id === itemId);\n\n        if (item) {\n          return [item, column];\n        }\n      }\n    })();\n\n    if (!item) {\n      throw new Error(\"Item not found.\");\n    }\n\n    item.content =\n      newProps.content === undefined ? item.content : newProps.content;\n\n    // Update column and position\n    if (newProps.columnId !== undefined && newProps.position !== undefined) {\n      const targetColumn = data.find(\n        (column) => column.id === newProps.columnId\n      );\n\n      if (!targetColumn) {\n        throw new Error(\"Target column not found.\");\n      }\n\n      // Delete the item from it's current column\n      currentColumn.items.splice(currentColumn.items.indexOf(item), 1);\n\n      // Move item into it's new column and position\n      targetColumn.items.splice(newProps.position, 0, item);\n    }\n\n    save(data);\n  }\n\n  static deleteItem(itemId) {\n    const data = read();\n\n    for (const column of data) {\n      const item = column.items.find((item) => item.id === itemId);\n\n      if (item) {\n        column.items.splice(column.items.indexOf(item), 1);\n      }\n    }\n\n    save(data);\n  }\n}\n\nfunction read() {\n  const json = localStorage.getItem(\"kanban-data\");\n\n  if (!json) {\n    return [\n      {\n        id: 1,\n        items: []\n      },\n      {\n        id: 2,\n        items: []\n      },\n      {\n        id: 3,\n        items: []\n      }\n    ];\n  }\n\n  return JSON.parse(json);\n}\n\nfunction save(data) {\n  localStorage.setItem(\"kanban-data\", JSON.stringify(data));\n}\n","import KanbanAPI from \"../kanbanApi\";\n\nexport default class DropZone {\n  static createDropZone() {\n    const range = document.createRange();\n\n    range.selectNode(document.body);\n\n    const dropZone = range.createContextualFragment(`\n\t\t\t<div class=\"kanban__dropzone\"></div>\n\t\t`).children[0];\n\n    dropZone.addEventListener(\"dragover\", (e) => {\n      e.preventDefault();\n      dropZone.classList.add(\"kanban__dropzone--active\");\n    });\n\n    dropZone.addEventListener(\"dragleave\", () => {\n      dropZone.classList.remove(\"kanban__dropzone--active\");\n    });\n\n    dropZone.addEventListener(\"drop\", (e) => {\n      e.preventDefault();\n      dropZone.classList.remove(\"kanban__dropzone--active\");\n\n      const columnElement = dropZone.closest(\".kanban__column\");\n      const columnId = Number(columnElement.dataset.id);\n      const dropZonesInColumn = Array.from(\n        columnElement.querySelectorAll(\".kanban__dropzone\")\n      );\n      const droppedIndex = dropZonesInColumn.indexOf(dropZone);\n      const itemId = Number(e.dataTransfer.getData(\"text/plain\"));\n      const droppedItemElement = document.querySelector(\n        `[data-id=\"${itemId}\"]`\n      );\n      const insertAfter = dropZone.parentElement.classList.contains(\n        \"kanban__item\"\n      )\n        ? dropZone.parentElement\n        : dropZone;\n\n      if (droppedItemElement.contains(dropZone)) {\n        return;\n      }\n\n      insertAfter.after(droppedItemElement);\n      KanbanAPI.updateItem(itemId, {\n        columnId,\n        position: droppedIndex\n      });\n    });\n\n    return dropZone;\n  }\n}\n","import DropZone from \"./DropZone.js\";\nimport KanbanAPI from \"../kanbanApi\";\n\nexport default class Item {\n  constructor(id, content) {\n    const bottomDropZone = DropZone.createDropZone();\n\n    this.elements = {};\n    this.elements.root = Item.createRoot();\n    this.elements.input = this.elements.root.querySelector(\n      \".kanban__item-input\"\n    );\n\n    this.elements.root.dataset.id = id;\n    this.elements.input.textContent = content;\n    this.content = content;\n    this.elements.root.appendChild(bottomDropZone);\n\n    const onBlur = () => {\n      const newContent = this.elements.input.textContent.trim();\n\n      if (newContent === this.content) {\n        return;\n      }\n\n      this.content = newContent;\n\n      KanbanAPI.updateItem(id, {\n        content: this.content\n      });\n    };\n\n    this.elements.input.addEventListener(\"blur\", onBlur);\n    this.elements.root.addEventListener(\"dblclick\", () => {\n      const check = window.confirm(\n        \"Are you sure you want to delete this item?\"\n      );\n\n      if (check) {\n        KanbanAPI.deleteItem(id);\n\n        this.elements.input.removeEventListener(\"blur\", onBlur);\n        this.elements.root.parentElement.removeChild(this.elements.root);\n      }\n    });\n\n    this.elements.root.addEventListener(\"dragstart\", (e) => {\n      e.dataTransfer.setData(\"text/plain\", id);\n    });\n\n    this.elements.input.addEventListener(\"drop\", (e) => {\n      e.preventDefault();\n    });\n  }\n\n  static createRoot() {\n    const range = document.createRange();\n\n    range.selectNode(document.body);\n\n    return range.createContextualFragment(`\n\t\t\t<div class=\"kanban__item\" draggable=\"true\">\n\t\t\t\t<div class=\"kanban__item-input\" contenteditable></div>\n\t\t\t</div>\n\t\t`).children[0];\n  }\n}\n","import KanbanAPI from \"../kanbanApi\";\nimport DropZone from \"./DropZone.js\";\nimport Item from \"./item\";\n\nexport default class Column {\n  constructor(id, title) {\n    const topDropZone = DropZone.createDropZone();\n\n    this.elements = {};\n    this.elements.root = Column.createRoot();\n    this.elements.title = this.elements.root.querySelector(\n      \".kanban__column-title\"\n    );\n    this.elements.items = this.elements.root.querySelector(\n      \".kanban__column-items\"\n    );\n    this.elements.addItem = this.elements.root.querySelector(\n      \".kanban__add-item\"\n    );\n\n    this.elements.root.dataset.id = id;\n    this.elements.title.textContent = title;\n    this.elements.items.appendChild(topDropZone);\n\n    this.elements.addItem.addEventListener(\"click\", () => {\n      const newItem = KanbanAPI.insertItem(id, \"\");\n\n      this.renderItem(newItem);\n    });\n\n    KanbanAPI.getItems(id).forEach((item) => {\n      this.renderItem(item);\n    });\n  }\n\n  static createRoot() {\n    const range = document.createRange();\n\n    range.selectNode(document.body);\n\n    return range.createContextualFragment(`\n\t\t\t<div class=\"kanban__column\">\n\t\t\t\t<div class=\"kanban__column-title\"></div>\n\t\t\t\t<div class=\"kanban__column-items\"></div>\n\t\t\t\t<button class=\"kanban__add-item\" type=\"button\">+ Add</button>\n\t\t\t</div>\n\t\t`).children[0];\n  }\n\n  renderItem(data) {\n    const item = new Item(data.id, data.content);\n\n    this.elements.items.appendChild(item.elements.root);\n  }\n}\n","import Column from \"./Column\";\n\nexport default class Kanban {\n  constructor(root) {\n    this.root = root;\n    Kanban.columns().forEach((column) => {\n      const columnView = new Column(column.id, column.title);\n      this.root.appendChild(columnView.elements.root);\n    });\n  }\n\n  static columns() {\n    return [\n      {\n        id: 1,\n        title: \"Not Started\"\n      },\n      {\n        id: 2,\n        title: \"In Progress\"\n      },\n      {\n        id: 3,\n        title: \"Completed\"\n      }\n    ];\n  }\n}\n","import \"./styles.css\";\n\nimport Kanban from \"./view/kanban\";\n\nnew Kanban(document.querySelector(\".kanban\"));\n"]}